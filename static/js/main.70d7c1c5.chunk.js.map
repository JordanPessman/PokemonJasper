{"version":3,"sources":["services/pokemon.js","services/pokemonTypes.js","services/pokemonTypesBackground.js","components/Card/Card.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["getAllPokemon","url","a","Promise","resolve","reject","fetch","then","res","json","data","getPokemon","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","psychic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","typeColorsBackground","Card","pokemon","className","style","backgroundImage","pokemonBackground","types","type","name","stats","base_stat","src","sprites","other","front_default","alt","map","backgroundColor","pokemonType","weight","height","abilities","ability","Navbar","App","useState","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","initialUrl","useEffect","response","next","previous","loadingPokemon","results","fetchData","prev","all","pokemonRecord","console","log","_pokemonData","onClick","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70d7c1c5.chunk.js","sourcesContent":["export async function getAllPokemon(url){\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => (\r\n            resolve(data)\r\n        ))\r\n    })\r\n}\r\n\r\nexport async function getPokemon(url){\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n            resolve(data);\r\n        });\r\n    });\r\n}","const typeColors = {\r\n    bug: '#729f3f',\r\n    dragon: '#53a4cf',\r\n    fairy: '#fdb9e9',\r\n    fire: '#fd7d24',\r\n    ghost: '#7b62a3',\r\n    ground: '#f7de3f',\r\n    normal: '#a4acaf',\r\n    psychic: '#f366b9',\r\n    steel: '#9eb7b',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#d56723',\r\n    flying: '#3dc7ef',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#a38c21',\r\n    water: '#4592c4'\r\n}\r\n\r\nexport default typeColors;","const typeColorsBackground = {\r\n    bug: 'linear-gradient(to top, #0fd850 0%, #f9f047 100%)',\r\n    dragon: 'linear-gradient(to top, #ebc0fd 0%, #d9ded8 100%)',\r\n    fairy: 'linear-gradient(to top, #fdcbf1 0%, #fdcbf1 1%, #e6dee9 100%)',\r\n    fire: 'linear-gradient(120deg, #f6d365 0%, #f1483c 100%)',\r\n    ghost: 'linear-gradient(-180deg, #BCC5CE 0%, #6a0dad 98%), radial-gradient(at top left, rgba(255,255,255,0.30) 0%, rgba(0,0,0,0.30) 100%)',\r\n    ground: 'linear-gradient(-225deg, #FFFEFF 0%, #a48a0c 100%)',\r\n    normal: 'radial-gradient(at 50% 100%, rgba(255,255,255,0.50) 0%, rgba(0,0,0,0.50) 100%), linear-gradient(to bottom, rgba(255,255,255,0.25) 0%, rgba(0,0,0,0.25) 100%)',\r\n    psychic: 'linear-gradient(to right, #ed6ea0 0%, #f46ae8 100%)',\r\n    steel: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',\r\n    dark: 'linear-gradient(60deg, #29323c 0%, #485563 100%)',\r\n    electric: 'linear-gradient(to top, #e6b980 0%, #FFFF33 100%)',\r\n    fighting: 'linear-gradient(to top, #ff0844 0%, #ffb199 100%)',\r\n    flying: 'linear-gradient(to top, #c79081 0%, #dfa579 100%)',\r\n    grass: 'linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%)',\r\n    ice: 'linear-gradient(60deg, #96deda 0%, #50c9c3 100%)',\r\n    poison: 'linear-gradient(to top, #cc208e 0%, #6713d2 100%)',\r\n    rock: 'linear-gradient(to top, #e6b980 0%, #eacda3 100%)',\r\n    water: 'linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%)'\r\n}\r\n\r\nexport default typeColorsBackground;","import React from 'react'\r\nimport './style.css'\r\nimport pokemonType from '../../services/pokemonTypes'\r\nimport pokemonBackground from '../../services/pokemonTypesBackground'\r\n\r\n\r\nfunction Card({ pokemon }){\r\n\r\n\r\n    return(\r\n        <div className=\"Card__Border\">\r\n            <div className=\"Card\" style={{ backgroundImage: pokemonBackground[pokemon.types[0].type.name] }}>\r\n                <div className=\"Card__name\">\r\n                    <p className=\"title__floatLeft\">{pokemon.name}</p>\r\n                    <p className=\"title__floatRight\">HP: {pokemon.stats[0].base_stat}</p>\r\n                </div>\r\n                <div className=\"Card__img__background\">\r\n                    <div className=\"Card__img\">\r\n                        <img src={pokemon.sprites.other[`official-artwork`].front_default} alt=\"\"></img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Card__types\">\r\n                    {pokemon.types.map(type => {\r\n                        return (\r\n                            <div className=\"Card__type\" style={{ backgroundColor: pokemonType[type.type.name] }}>\r\n                                {type.type.name}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"Card__info\">\r\n                    <div className=\"Card__data Card__data--weight\">\r\n                        <p className=\"title\">Weight</p>\r\n                        <p>{pokemon.weight}</p>\r\n                    </div>\r\n                    <div className=\"Card__data Card__data--height\">\r\n                        <p className=\"title\">Height</p>\r\n                        <p>{pokemon.height}</p>\r\n                    </div>\r\n                    <div className=\"Card__data Card__data--ability\">\r\n                        <p className=\"title\">Ability</p>\r\n                        <p>{pokemon.abilities[0].ability.name}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport './style.css'\r\n\r\nfunction Navbar() {\r\n    return(\r\n    <div className=\"Navbar\">\r\n        Pokemon Jasper Pokedex\r\n        <button className=\"btn-navbar\">Home</button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useState, useEffect } from 'react'\nimport { getAllPokemon } from './services/pokemon'\nimport { getPokemon } from './services/pokemon'\nimport Card from './components/Card/Card'\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar'\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNextUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n      setNextUrl(response.next);\n      setPrevUrl(response.previous);\n      let pokemon = await loadingPokemon(response.results);\n      setLoading(false);\n    }\n    fetchData();\n  }, [])\n\n  const next = async () => {\n    setLoading(true);\n    let data = await getAllPokemon(nextUrl);\n    await loadingPokemon(data.results);\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  }\n\n  const prev = async () => {\n    if(!prevUrl) return;\n    setLoading(true);\n    let data = await getAllPokemon(prevUrl);\n    await loadingPokemon(data.results);\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  }\n\n  const loadingPokemon = async (data) => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon.url);\n      console.log(pokemonRecord)\n      return pokemonRecord\n    }))\n\n    setPokemonData(_pokemonData);\n  }\n\n  return (\n    <div className=\"App\">\n      \n        \n            <Navbar />\n            <div className=\"btn\">\n              <button onClick=\"\">Shiny</button>\n              <button onClick={prev}>Prev</button>\n              <button onClick={next}>Next</button>\n            </div>\n            { loading ? <h1>Loading...</h1> : ( \n              <>\n            <div className=\"grid-container\">\n              { pokemonData.map((pokemon, i) => {\n                  return <Card key={i} pokemon={pokemon}/>\n              })} \n            </div>\n          </>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}